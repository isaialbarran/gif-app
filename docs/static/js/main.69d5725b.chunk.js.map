{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","onChange","target","value","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,iBAAM,CAACE,MACrBC,EAAc,OAMd,2BAAOM,SAde,SAACJ,GACzBF,EAAcE,EAAEK,OAAOC,QAaeA,MAAOT,EAAYU,KAAK,SAAU,M,uBCpB/DC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCYLO,EAVK,SAAC,GAAa,IAAXL,EAAU,EAAVA,IACbR,EAAeQ,EAAfR,IAAKU,EAAUF,EAAVE,MAEb,OACE,yBAAKI,UAAU,iDACb,yBAAKC,IAAKf,EAAKgB,IAAKN,MCiBXO,EApBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAUxC,OAJAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAChE,CAACpB,IAEGqB,EDR2BK,CAAa1B,GAAjCa,EADkB,EACxBN,KAAca,EADU,EACVA,QAGtB,OAFAO,QAAQC,IAAIR,GAGV,oCACE,4BAAKpB,GACJoB,EACC,eAEA,yBAAKJ,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAamB,IAAKnB,EAAIC,GAAID,IAAKA,UEK5BoB,EAjBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,SADrB,mBAClB4C,EADkB,KACN7C,EADM,KAGzB,OACE,oCACE,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACG6C,EAAWtB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,UCT5CgC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.69d5725b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories(() => [inputValue]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input onChange={handleInputChange} value={inputValue} type='text' />{' '}\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=GyHJukELrI0UQUKmS9QOUpiZJY0Lp79O`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ img }) => {\n  const { url, title } = img;\n\n  return (\n    <div className='card animate__animated animate__fadeInLeftBig'>\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n  console.log(loading);\n\n  return (\n    <>\n      <h3>{category}</h3>\n      {loading ? (\n        'Cargando....'\n      ) : (\n        <div className='card-grid'>\n          {images.map((img) => (\n            <GifGridItem key={img.id} img={img} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }));\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Goku']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr />\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}